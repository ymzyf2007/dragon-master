package com.dragon.basic.数学计算;

/**
 * 正数的反码和补码都与原码一样；
 * 负数的反码、补码与原码不同，负数的反码：原码中除去符号位，其他的数值位取反，0变1，1变0。负数的补码：其反码+1.
 * eg：分别写出7和-7的原码、反码、补码。（其中第一位是符号位，0表示正数，1表示负数）[1111 1111 , 0111 1111]即：[-127 , 127]
 * 7；	原码：00000111 反码：00000111 补码：00000111
 * -7；	原码：10000111 反码：11111000 补码：11111001
 */
public class 补码总结 {
	
	/**
	 * 源码，反码，补码知识
	 * @param args
	 */
	public static void main(String[] args) {
		int m = -10;	// 原码：10001010 反码：11110101 补码：11110110
		int n = 1;	// 原码反码补码：00000001
		int z = m & n;	// -10 & 1 即 11110110 & 00000001 = 0
		System.out.println("z=" + z);
		System.out.println("10 & -1 = " + (10 & -1));	// 10 & -1 即 00001010 & 11111111 = 10
	}

}